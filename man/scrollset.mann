'\"
'\" Copyright 1998 by Bell Labs Innovations for Lucent Technologies.
'\"
'\" Permission to use, copy, modify, and distribute this software and its
'\" documentation for any purpose and without fee is hereby granted, provided
'\" that the above copyright notice appear in all copies and that both that the
'\" copyright notice and warranty disclaimer appear in supporting documentation,
'\" and that the names of Lucent Technologies any of their entities not be used
'\" in advertising or publicity pertaining to distribution of the software
'\" without specific, written prior permission.
'\"
'\" Lucent Technologies disclaims all warranties with regard to this software,
'\" including all implied warranties of merchantability and fitness.  In no event
'\" shall Lucent Technologies be liable for any special, indirect or
'\" consequential damages or any damages whatsoever resulting from loss of use,
'\" data or profits, whether in an action of contract, negligence or other
'\" tortuous action, arising out of or in connection with the use or performance
'\" of this software.  
'\"
'\" Scrollset widget created by George Howlett.
'\"
.so man.macros
.TH scrollset n BLT_VERSION BLT "BLT Built-In Commands"
.BS
'\" Note:  do not modify the .SH NAME line immediately below!
.SH NAME
scrollset \- Create and manipulate scrollset widgets
.BE
.SH SYNOPSIS
\fBblt::scrollset\fR \fIpathName \fR?\fIoption valuefR?...
.SH DESCRIPTION
The \fBscrollset\fR manages an embedded widget and optionally 
vertical and hortizontal scrollbars.  The scrollbars are automatically 
exposed and hidden as the \fBscrollset\fR widget is resized.
Whenever the \fBscrollset\fR window is smaller horizontally and/or vertically
than the 
embedded window, the appropiate scrollbar is exposed.
The embedded widget can be any Tk widget.  If the widget
doesn't support standard Tk scrolling capabilities 
(i.e. a \fBxview\fR or \fByview\fR operation) 
the widget is scrolled by using 
the scrollset window as a viewport over the embedded widget. 
.SH SYNTAX
The \fBscrollset\fR command creates a new window using the \fIpathName\fR
argument and makes it into a scrollset widget.
Additional options may be specified on the command line or in the
option database to configure aspects of the scrollset such as its background
color, scrollbars, or embedded widget. The \fBscrollset\fR command returns its
\fIpathName\fR argument.  At the time this command is invoked, there
must not exist a window named \fIpathName\fR, but \fIpathName\fR's
parent must exist.
.PP
The scrollbars and embedded widget must be children of the scrollset 
widget.  The scrollbars and embedded widget may be designated 
in the \fBscrollset\fR widget before they exist.  The normal size of
of \fBscrollset\fR is the requested width and height of the embedded widget
(where no scrollbars are necessary).  You can override the embedded widget's
requested size by setting the scrollset's \fB\-reqwidth\fR and 
\fB\-reqheight\fR options respectively.
.SH "OPERATIONS"
All \fBscrollset\fR operations are invoked by specifying the widget's
pathname, the operation, and any arguments that pertain to that
operation.  The general form is:
.sp
.DS
	\fIpathName operation \fR?\fIarg arg ...\fR?
.DE
.sp
\fIOperation\fR and the \fIarg\fRs determine the exact behavior of the
command.  The following operations are available for scrollset widgets:
.TP
\fIpathName \fBcget\fR \fIoption\fR
Returns the current value of the configuration option given
by \fIoption\fR.
\fIOption\fR may have any of the values accepted by the \fBconfigure\fR
operation described in the section
.SB "WIDGET OPTIONS" 
below.
.TP
\fIpathName \fBconfigure\fR ?\fIoption\fR? ?\fIvalue option value ...\fR?
Query or modify the configuration options of the widget.
If no \fIoption\fR is specified, returns a list describing all 
the available options for \fIpathName\fR (see \fBTk_ConfigureInfo\fR for
information on the format of this list).  If \fIoption\fR is specified
with no \fIvalue\fR, then the command returns a list describing the
one named option (this list will be identical to the corresponding
sublist of the value returned if no \fIoption\fR is specified).  If
one or more \fIoption\-value\fR pairs are specified, then the command
modifies the given widget option(s) to have the given value(s);  in
this case the command returns an empty string.
\fIOption\fR and \fIvalue\fR are described in the section
.SB "WIDGET OPTIONS" 
below.
.TP
\fIpathName \fBxset \fIfirst\fR \fIlast\fR
Scrolls the scrollset so that the tab
\fItab\fR is visible in the widget's window.
.TP
\fIpathName \fBxview \fIargs\fR
This command queries or changes the horizontal position of the
embedded widget in the scrollset's window.  It can take any of the 
following forms:
.RS
.TP
\fIpathName \fBxview\fR 
Returns a list of two numbers between 0.0 and
1.0 that describe the amount and position of the embedded widget that is
visible in the \fBscrollset\fR window.  
For example, if \fIview\fR is "\f(CW0.2 0.6\fR", 
twenty percent
of the embedded widget is off-screen to the left, forty percent
is visible in the
window, and 40 percent of the embedded widget is off-screen to the right.  
These are
the same values passed to scrollbars via the \fB\-xscrollcommand\fR
option.
.TP
\fIpathName \fBxview moveto\fI fraction\fR
Adjusts the view in the window so that \fIfraction\fR of the
total width of the scrollset text is off-screen to the left.
\fIfraction\fR must be a number between 0.0 and 1.0.
.TP
\fIpathName \fBxview scroll \fInumber what\fR 
This command shifts the view in the window (left/top or right/bottom)
according to \fInumber\fR and \fIwhat\fR.  \fINumber\fR must be an
integer. \fIWhat\fR must be either \fBunits\fR or \fBpages\fR or an
abbreviation of these.  If \fIwhat\fR is \fBunits\fR, the view adjusts
left or right by \fInumber\fR scroll units (see the
\fB\-xscrollincrement\fR option); if it is \fBpages\fR then the view
adjusts by \fInumber\fR widget windows.  If \fInumber\fR is negative
then tabs farther to the left become visible; if it is positive then
tabs farther to the right become visible.
.RE
.TP
\fIpathName \fByset \fIfirst\fR \fIlast\fR
Scrolls the embedded window vertically so that the tab
\fItab\fR is visible in the widget's window.
.TP
\fIpathName \fByview \fIargs\fR
This command queries or changes the vertical position of the
embedded widget in the scrollset's window.  It can take any of the following
forms:
.RS
.TP
\fIpathName \fByview\fR 
Returns a list of two numbers between 0.0 and
1.0 that describe the amount and position of the embedded widget that is
visible in the \fBscrollset\fR window.  
For example, if the result is "\f(CW0.2 0.6\fR", 
twenty percent
of the embedded widget is off-screen to the top, forth percent 
is visible in the
window, and forty percent of the embedded widget is off-screen to the bottom.  
These are
the same values passed to scrollbars via the \fB\-yscrollcommand\fR
option.
.TP
\fIpathName \fByview moveto\fI fraction\fR
Adjusts the view in the window so that \fIfraction\fR of the
total width of the embedded widget is off-screen to the top.
\fIfraction\fR must be a number between 0.0 and 1.0.
.TP
\fIpathName \fByview scroll \fInumber what\fR 
This command shifts the view in the window (top or bottom)
according to \fInumber\fR and \fIwhat\fR.  \fINumber\fR must be an
integer. \fIWhat\fR must be either \fBunits\fR or \fBpages\fR or an
abbreviation of these.  If \fIwhat\fR is \fBunits\fR, the view adjusts
left or right by \fInumber\fR scroll units (see the
\fB\-yscrollincrement\fR option); if it is \fBpages\fR then the view
adjusts by \fInumber\fR widget windows.  If \fInumber\fR is negative
then tabs farther to the left become visible; if it is positive then
tabs farther to the right become visible.
.RE
.SH "WIDGET OPTIONS"
Widget configuration options may be set either by the \fBconfigure\fR 
operation or the Tk \fBoption\fR command.  The resource class
is \f(CWScrollset\fR.  The resource name is the name of the widget.
.CS
option add *Scrollset.anchor n
option add *Scrollset.Anchor e
.CE
The following widget options are available:
.TP
\fB\-anchor \fIanchor\fR
Sets the default active background color for tabs.  A tab is active
when the mouse is positioned over it or set by the \fBactivate\fR
operation.  Individual tabs may override this option by setting the 
tab's \fB\-activebackground\fR option. 
.TP
\fB\-background \fIcolor\fR
Sets the default background for the scrollset widget.  Normally the
background is completely obscurred by the embedded widget.
.TP
\fB\-cursor \fIcursor\fR
Specifies the widget's cursor.  The default cursor is \f(CW""\fR.
.TP
\fB\-fill \fIpixels\fR
If the space in the widget surrounding the embedded widget is 
larger than the widget, then \fIfill\fR indicates if the embedded widget 
should be stretched to occupy the extra space.  \fIFill\fR is either 
\f(CWnone\fR,
\f(CWx\fR, \f(CWy\fR, \f(CWboth\fR.  For example, if \fIfill\fR is \f(CWx\fR,
then the widget is stretched horizontally.  If \fIfill\fR is \f(CWy\fR,
the widget is stretched vertically.  The default is \f(CWnone\fR.
.TP
\fB\-height \fIpixels\fR
Specifies the requested height of scrollset widget.  If \fIpixels\fR is
0, then the height of the widget will be calculated based on
the size the embedded widget.
The default is \f(CW0\fR.
.TP
\fB\-ipadx \fIpad\fR
Sets the padding to the left and right of the embedded widget.
\fIPad\fR can be a list of one or two screen distances.  If \fIpad\fR
has two elements, the left side of the widget is padded by the first
distance and the right side by the second.  If \fIpad\fR has just one
distance, both the left and right sides are padded evenly.  The
default value is \f(CW0\fR.
.TP
\fB\-ipady \fIpad\fR
Sets the padding to the top and bottom of the embedded widget.
\fIPad\fR can be a list of one or two screen distances.  If \fIpad\fR
has two elements, the top of the embedded widget is padded by the first
distance and the bottom by the second.  If \fIpad\fR has just one
distance, both the top and bottom are padded evenly.  The
default value is \f(CW0\fR.
.TP
\fB\-padx \fIpad\fR
Sets the padding around the left and right of the embedded widget, if 
one exists.
\fIPad\fR can be a list of one or two screen distances.  If \fIpad\fR
has two elements, the left side of the widget is padded by the first
distance and the right side by the second.  If \fIpad\fR has just one
distance, both the left and right sides are padded evenly.  The
default value is \f(CW0\fR.
.TP
\fB\-pady \fIpad\fR
Sets the padding around the top and bottom of the embedded widget, if
one exists.
\fIPad\fR can be a list of one or two screen distances.  If \fIpad\fR
has two elements, the top of the widget is padded by the first
distance and the bottom by the second.  If \fIpad\fR has just one
distance, both the top and bottom sides are padded evenly.  The
default value is \f(CW0\fR.
.TP
\fB\-reqheight \fIpixels\fR
If \fIpixels\fR is greater than 0, this specifies the requested height 
of the embedded widget, overriding its the widget's requested height.
The default is \f(CW0\fR.
.TP
\fB\-reqwidth \fIpixels\fR
If \fIpixels\fR is greater than 0, this specifies the requested width 
of the embedded widget, overriding the widget's own requested width.
The default is \f(CW0\fR.
.TP
\fB\-xscrollbar \fIscrollbar\fR
Specifies the horizontal scrollbar.  If \fIscrollbar\fR is the empty
string, no horizontal scrollbar will be used.  The default is \f(CW""\fR.
.TP 
\fB\-xscrollcommand \fIstring\fR
Specifies the prefix for a command used to communicate with horizontal
scrollbars.  Whenever the horizontal view in the widget's window 
changes, the widget will generate a Tcl command by concatenating the 
scroll command and two numbers.  If this option is not specified, then 
no command will be executed.
.TP
\fB\-xscrollincrement\fR \fIpixels\fR
Sets the horizontal scrolling distance. The default is 20 pixels.
.TP
\fB\-xviewcommand \fIcommand\fR
Sets the width of the 3\-D border around the outside edge of the widget.  The
\fB\-relief\fR option determines how the border is to be drawn.  The
default is \f(CW0\fR.
.TP
\fB\-yscrollbar \fIscrollbar\fR
Specifies the vertical scrollbar.  If \fIscrollbar\fR is the empty
string, no scrollbar will be used.  The default is \f(CW""\fR.
.TP
\fB\-yscrollcommand \fIstring\fR
Specifies the prefix for a command used to communicate with vertical
scrollbars.   Whenever the vertical view in the widget's window 
changes, the widget will generate a Tcl command by concatenating the 
scroll command and two numbers.  If this option is not specified, then 
no command will be executed.
.TP
\fB\-yscrollincrement\fR \fIpixels\fR
Sets the vertical scrolling distance. The default is 20 pixels.
.TP
\fB\-yviewcommand \fIcommand\fR
Sets the width of the 3\-D border around the outside edge of the widget.  The
\fB\-relief\fR option determines how the border is to be drawn.  The
default is \f(CW0\fR.
.TP
\fB\-width \fIpixels\fR
Specifies the requested width of the scrollset widget.  If \fIpixels\fR is
0, then the width of the widget will be calculated based on
the request size embedded widget.
The default is \f(CW0\fR.
.TP
\fB\-window \fIpathName\fR
Specifies the widget to be embedded into the scrollset.  \fIPathName\fR must
be a child of the \fBscrollset\fR widget.  The scrollset will "pack" and
manage the size and placement of \fIpathName\fR.  The default value
is \f(CW""\fR.
.SH "DEFAULT BINDINGS"
.PP
There are no default class bindings for scrollset widgets.
.SH EXAMPLE
You create a scrollset widget with the \fBscrollset\fR command.
.CS
# Create a new scrollset
scrollset .ts -relief sunken -borderwidth 2 
.CE
A new Tcl command \f(CW.ts\fR is also created.  This command can be
used to query and modify the scrollset.  For example, to change the
default font used by all the tab labels, you use the new command and
the scrollset's \fBconfigure\fR operation.
.CS
# Change the default font.
\&.ts configure \-font "fixed"
.CE
You can then add folders using the \fBinsert\fR operation.
.CS
# Create a new folder "f1"
\&.ts insert 0 "f1"
.CE
This inserts the new tab named "f1" into the scrollset.  The index
\f(CW0\fR indicates location to insert the new tab.  You can also use
the index \f(CWend\fR to append a tab to the end of the scrollset.  By
default, the text of the tab is the name of the tab.  You can change
this by configuring the \fB\-text\fR option.
.CS
# Change the label of "f1"
\&.ts tab configure "f1" -text "Tab #1" 
.CE
The \fBinsert\fR operation lets you add one or more folders at a time.
.CS
\&.ts insert end "f2" -text "Tab #2" "f3" "f4" 
.CE
The tab on each folder contains a label.  A label may display both
an image and a text string.  You can reconfigure the tab's attributes
(foreground/background colors, font, rotation, etc) using the \fBtab
configure\fR operation.
.CS
# Add an image to the label of "f1"
set image [image create photo -file stopsign.gif]
\&.ts tab configure "f1" -image $image
\&.ts tab configure "f2" -rotate 90
.CE
Each folder may contain an embedded widget to represent its contents.
The widget to be embedded must be a child of the scrollset widget.  Using
the \fB\-window\fR option, you specify the name of widget to be
embedded.  But don't pack the widget, the scrollset takes care of placing
and arranging the widget for you.
.CS
graph .ts.graph
\&.ts tab configure "f1" -window ".ts.graph" \\
    -fill both -padx 0.25i -pady 0.25i
.CE
The size of the folder is determined the sizes of the Tk widgets
embedded inside each folder.  The folder will be as wide as the widest
widget in any folder. The tallest determines the height.  You can use
the tab's \fB\-pagewidth\fR and \fB\-pageheight\fR options override this.
.PP
Other options control how the widget appears in the folder.  The
\fB\-fill\fR option says that you wish to have the widget stretch to
fill the available space in the folder.
.CS
\&.ts tab configure "f1" -fill both -padx 0.25i -pady 0.25i
.CE
.PP
Now when you click the left mouse button on "f1", the
graph will be displayed in the folder.  It will be automatically
hidden when another folder is selected.  If you click on the right
mouse button, the embedded widget will be moved into a toplevel widget 
of its own.  Clicking again on the right mouse button puts it back into 
the folder.
.PP
If you want to share a page between two different folders, the
\fB\-command\fR option lets you specify a Tcl command to be invoked
whenever the folder is selected.  You can reset the \fB\-window\fR
option for the tab whenever it's clicked.
.CS
\&.ts tab configure "f2" -command { 
    \&.ts tab configure "f2" -window ".ts.graph"
}
\&.ts tab configure "f1" -command { 
    \&.ts tab configure "f1" -window ".ts.graph"
}
.CE
If you have many folders, you may wish to stack tabs in multiple
tiers.  The scrollset's \fB\-tiers\fR option requests a maximum
number of tiers.   The default is one tier.  
.CS
\&.ts configure -tiers 2
.CE
If the tabs can fit in less tiers, the widget will use that many.  
Whenever there are more tabs than can be displayed in the maximum number
of tiers, the scrollset will automatically let you scroll the tabs.  You
can even attach a scrollbar to the scrollset.
.CS
\&.ts configure -scrollcommand { .sbar set }  -scrollincrement 20
\&.sbar configure -orient horizontal -command { .ts view }
.CE
By default tabs are along the top of the scrollset from left to right.  
But tabs can be placed on any side of the scrollset using the \fB\-side\fR
option.
.CS
# Arrange tabs along the right side of the scrollset. 
\&.ts configure -side right -rotate 270
.CE
.SH KEYWORDS
scrollset, widget
